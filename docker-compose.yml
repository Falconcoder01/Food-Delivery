services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx_cont
    ports:
      - "80:80"
    depends_on:
      - frontend
      - admin
      - backend
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/healthz || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - foodnet

  mongo:
    image: mongo:8
    container_name: mongo_cont
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: examplepassword
    healthcheck:
      test: ["CMD-SHELL", "mongosh --eval 'db.runCommand({ ping: 1 })' --quiet"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - foodnet

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend_cont
    restart: always
    expose:
      - "4000"
    env_file:
      - ./backend/.env
    depends_on:
      - mongo
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:4000/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - foodnet

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend_cont
    restart: always
    expose:
      - "80"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/index.html || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - foodnet

  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile
    container_name: admin_cont
    restart: always
    expose:
      - "80"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/index.html || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - foodnet

volumes:
  mongo_data:
    driver: local

networks:
  foodnet:
    driver: bridge


